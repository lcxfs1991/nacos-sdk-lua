---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by huifer.
--- DateTime: 2020/12/10 16:22
---

local httpUtils = require("utils.HttpUtils")
NacosNamespace = {}

namespaces = '/nacos/v1/console/namespaces'


--查询命名空间列表

function QueryNamespaceList(domain)
    if domain == nil then
        error("nacos domain is not null")
    end
    local url = domain .. namespaces

    print("request url " .. url)

    return httpUtils.wb_getUrl(url)

end
--创建命名空间
--customNamespaceId	字符串	是	命名空间ID
--namespaceName	字符串	是	命名空间名
--namespaceDesc	字符串	否	命名空间描述
function CreateNamespace(
        domain,
        customNamespaceId,
        namespaceName,
        namespaceDesc)
    if domain == nil then
        error("nacos domain is not null")
    end

    if customNamespaceId == nil then
        error("customNamespaceId is not null")
    end
    if namespaceName == nil then
        error("namespaceName is not null")
    end

    local url = domain .. namespaces .. '?'
            .. 'customNamespaceId=' .. tostring(customNamespaceId)
            .. '&namespaceName=' .. tostring(namespaceName)
            .. '&namespaceDesc=' .. tostring(namespaceDesc)
    print("request url " .. url)

    return httpUtils.wb_postUrl(url)
end


--修改命名空间
--namespaceId	字符串	是	命名空间ID
--namespaceName	字符串	是	命名空间名
--namespaceDesc	字符串	是	命名空间描述
function UpdateNamespace(
        domain,
        namespaceId,
        namespaceName,
        namespaceDesc
)
    if domain == nil then
        error("nacos domain is not null")
    end

    if namespaceId == nil then
        error("namespaceId is not null")
    end
    if namespaceName == nil then
        error("nanamespaceId is not null")
    end
    if namespaceDesc == nil then
        error("nanamespaceId is not null")
    end

    local url = domain .. namespaces .. '?'
            .. 'namespaceId=' .. tostring(namespaceId)
            .. '&namespaceName=' .. tostring(namespaceName)
            .. '&namespaceDesc=' .. tostring(namespaceDesc)
    print("request url " .. url)

    return httpUtils.wb_putUrl(url)
end


--删除命名空间
function DeleteNamespace(domain, namespaceId)
    if domain == nil then
        error("nacos domain is not null")
    end
    if namespaceId == nil then
        error("namespaceId is not null")
    end

    local url = domain .. namespaces .. '?'
            .. 'namespaceId=' .. tostring(namespaceId)

    print("request url " .. url)
    return httpUtils.wb_deleteUrl(url)


end

return NacosNamespace